{{- if eq .Values.controller.kind "daemonset" }}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ .Values.controller.name | trunc 63 }}
  labels:
    app: {{ .Values.controller.name | trunc 63 }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.controller.name | trunc 63 }}
      component: controller
  template:
    metadata:
      labels:
        app: {{ .Values.controller.name | trunc 63 }}
        component: controller
{{- if .Values.prometheus }}
{{- if and (.Values.controller.nginxplus)  (.Values.prometheus.create) }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.prometheus.port }}"
{{- end }}
{{- end }}
    spec:
{{- if .Values.controller.serviceAccountName }}
      serviceAccountName: {{ .Values.controller.serviceAccountName }}
{{- end }}
      terminationGracePeriodSeconds: {{ .Values.controller.terminationGracePeriodSeconds }}
{{- if .Values.controller.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.controller.nodeSelector | indent 8 }}
{{- end }}
{{- if eq .Values.controller.tolerations "icp" }}
      tolerations:
      - key: "dedicated"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "CriticalAddonsOnly"
        operator: "Exists"
{{- end }}
      hostNetwork: {{ .Values.controller.hostNetwork }}
{{- if .Values.controller.wallarm.enabled }}
      initContainers:
{{ include "kubernetes-ingress.wallarmInitContainer" . | indent 8 }}
{{- end }}
      volumes:
        - name: wallarm
          emptyDir: {}
        - name: collectd-config
          configMap:
          name: {{ template "kubernetes-ingress.controller.fullname" . }}-collectd
      containers:
      - name: {{ .Values.controller.name | trunc 63 }}
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
        imagePullPolicy: "{{ .Values.controller.image.pullPolicy }}"
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
          - name: wallarm
            mountPath: /etc/wallarm
        args:
          - -wallarm-tarantool-service={{ .Release.Namespace }}/{{ template "kubernetes-ingress.wallarmTarantoolName" . }}
{{- if .Values.controller.nginxplus }}
          - -nginx-plus
{{- end }}
          - -nginx-configmaps=$(POD_NAMESPACE)/nginx-config
{{- if .Values.controller.defaultTLS.secret }}
          - -default-server-tls-secret={{ .Values.controller.defaultTLS.secret }}
{{ else }}
          - -default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret
{{- end }}
{{- if .Values.controller.ingressClass }}
          - -ingress-class={{ .Values.controller.ingressClass }}
{{- end }}
{{- if .Values.controller.useIngressClassOnly }}
          - -use-ingress-class-only={{ .Values.controller.useIngressClassOnly }}
{{- end }}
{{- if .Values.controller.watchNamespace }}
          - -watch-namespace={{ .Values.controller.watchNamespace }}
{{- end }}
{{- if .Values.controller.healthStatus }}
          - -health-status
{{- end }}
{{- if .Values.controller.reportIngressStatus.enable }}
          - -report-ingress-status
{{- if .Values.controller.reportIngressStatus.externalService }}
          - -external-service={{ .Values.controller.reportIngressStatus.externalService }}
{{- end }}
{{ if .Values.controller.reportIngressStatus.enableLeaderElection }}
          - -enable-leader-election
{{- end }}
{{- end }}
{{- if .Values.prometheus }}
{{- if and (.Values.controller.nginxplus)  (.Values.prometheus.create) }}
      - image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
        imagePullPolicy: "{{ .Values.prometheus.image.pullPolicy }}"
        name: nginx-prometheus-exporter
        ports:
        - name: prometheus
          containerPort: {{ .Values.prometheus.port }}
        args:
          - -web.listen-address
          - :{{ .Values.prometheus.port }}
          - -nginx.plus
          - -nginx.scrape-uri
          - http://127.0.0.1:8080/api
{{- end }}
{{- end }}
{{- end }}
